// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model companies {
  companyId Int @id @default(autoincrement())
  companyName String
  companyCode String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  users users[]
}

model users {
  userId Int @id @default(autoincrement())
  username String
  password String
  email String
  fullName String
  userType UserType
  companies companies? @relation(fields: [companyId], references: [companyId])
  companyId Int?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  userPermissions userPermissions[]
  userRoles userRoles[]
}

enum UserType {
  Admin
  Officer
  Finance
  Customer_Admin 
  Customer_Service 
}

model userPermissions {
  permissionId Int @id @default(autoincrement())
  userId Int 
  permissionType permissionType?
  users users @relation(fields: [userId], references: [userId], onDelete: Cascade)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
}

enum permissionType {
  Inbound
  Outbound
  Stock_Transfer 
  Order_Management 
}

model roles {
  roleId Int @id @default(autoincrement())
  roleName roleName
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  userRoles userRoles[]
}

enum roleName {
    Owner
    Admin
    Officer
    Finance
    Customer_Admin 
    Customer_Service 
}

model userRoles {
  userRoles Int @id @default(autoincrement())
  userId Int
  roleId Int
  users users @relation(fields: [userId], references: [userId])
  roles roles @relation(fields: [roleId], references: [roleId])
  createdAt   DateTime   @default(now())
  updatedAt  DateTime   @default(now())
}

model warehouses {
  id Int @id @default(autoincrement())
  code String
  name String 
  address String
  status status
}

enum status {
  active
  inactive
}